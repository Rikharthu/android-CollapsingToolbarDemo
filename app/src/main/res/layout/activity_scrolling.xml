<?xml version="1.0" encoding="utf-8"?>
<android.support.design.widget.CoordinatorLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:fitsSystemWindows="true"
    tools:context="com.accintern.ricardarmankuodis.scrollingapp.ScrollingActivity">

    <!-- AppBarLayout -->
    <!--allows the Toolbar and other views (such as tabs provided by TabLayout)
    to react to scroll events in a sibling view marked with a ScrollingViewBehavior.-->
    <android.support.design.widget.AppBarLayout
        android:id="@+id/app_bar"
        android:layout_width="match_parent"
        android:layout_height="@dimen/app_bar_height"
        android:fitsSystemWindows="true"
        android:theme="@style/AppTheme.AppBarOverlay">

        <!--manage the behavior with layout_scrollFlags attribute -->
        <!--layout_scrollFlags: scroll-->
        <android.support.design.widget.CollapsingToolbarLayout
            android:id="@+id/toolbar_layout"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:fitsSystemWindows="true"
            app:contentScrim="?attr/colorPrimary"
            app:layout_scrollFlags="scroll|exitUntilCollapsed">
            <!--SCROLL_FLAG_ENTER_ALWAYS: When entering (scrolling on screen) the view will scroll
                    on any downwards scroll event, regardless of whether the scrolling view is
                    also scrolling.
                SCROLL_FLAG_ENTER_ALWAYS_COLLAPSED: An additional flag for 'enterAlways'
                    which modifies the returning view to only initially scroll back to it's
                    collapsed height.
                SCROLL_FLAG_EXIT_UNTIL_COLLAPSED: When exiting (scrolling off screen) the view
                    will be scrolled until it is 'collapsed'.
                SCROLL_FLAG_SCROLL: The view will be scroll in direct relation to scroll events.
                SCROLL_FLAG_SNAP: Upon a scroll ending, if the view is only partially visible
                    then it will be snapped and scrolled to it's closest edge.
                -->

            <ImageView
                android:layout_width="match_parent"
                android:layout_height="match_parent"
                android:fitsSystemWindows="true"
                android:scaleType="centerCrop"
                android:src="@drawable/forest"
                app:layout_collapseMode="parallax"/>
            <!--collapseMode="parallax" - this view will scroll in a parallax fashion-->

            <android.support.v7.widget.Toolbar
                android:id="@+id/toolbar"
                android:layout_width="match_parent"
                android:layout_height="?attr/actionBarSize"
                app:layout_collapseMode="pin"
                app:popupTheme="@style/AppTheme.PopupOverlay"/>
            <!--collapseMode="pin" - ensure that the Toolbar itself remains pinned to the
            top of the screen while the view collapses -->

            <!--CollapsingToolbarLayout will appear larger when the layout is fully visible,
            then transition to its default size as it is collapsed. Weâ€™ll set this title in code.
            The rest of the layout contains a NestedScrollView with several Cards as its children.-->

        </android.support.design.widget.CollapsingToolbarLayout>
    </android.support.design.widget.AppBarLayout>

    <!--Scrollable view-->
    <include layout="@layout/content_scrolling"/>

    <!-- FloatingActionButton-->
    <android.support.design.widget.FloatingActionButton
        android:id="@+id/fab"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_margin="@dimen/fab_margin"
        app:layout_anchor="@id/app_bar"
        app:layout_anchorGravity="bottom|end"
        app:srcCompat="@android:drawable/ic_dialog_email"/>
    <!-- app:layout_anchor="@id/app_bar" will pin this fab to app_bar (AppBarLayout) to bottom-right-->

</android.support.design.widget.CoordinatorLayout>
